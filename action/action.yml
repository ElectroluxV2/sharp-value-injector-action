name: "Sharp Value Injector"
description: |
  Reads given inputs for variables to substitute for in given output files.
inputs:
  output:
    description: "Files to inject values into or directories to scan (may contain file name patterns such as '/sample/path/*.yaml'.). To specify multiple outputs, separate them with ';'."
    required: true
  variables:
    description: "Path to JSON file or directories to scan (may contain file name patterns such as '/sample/path/*.json'.) that contain values to inject into target files. To specify multiple files, separate them with new line or ';'. Order matters when resolving conflicts."
    required: true
  secrets:
    description: "Path to JSON file or directories to scan (may contain file name patterns such as '/sample/path/*.json'.) that contain secrets to inject into target files. To specify multiple files, separate them with new line or ';'. Order matters when resolving conflicts."
    required: false
  recurse-subdirectories:
    description: "Weather to scan subdirectories of the given directories."
    required: false
    default: "true"
  ignore-case:
    description: "Weather to ignore case when matching file name patterns."
    required: false
    default: "true"
  opening-token:
    description: "The opening token for variable interpolation."
    required: false
    default: "#{"
  closing-token:
    description: "The closing token for variable interpolation."
    required: false
    default: "}"
  log-level:
    description: "The minimum level of logs to output."
    required: false
    default: "Information"

runs:
  using: "composite"
  steps:
  # TODO: Create prod version of this action that will run compiled binary instead of source code.
  - name: "Setup .NET"
    uses: "actions/setup-dotnet@v4"
    with:
      dotnet-quality: "daily"
      dotnet-version: "9.0.2xx"

  - name: "Compose GitHub Action Fetcher"
    shell: bash # language=sh
    run: |
      dotnet run --project "${GITHUB_ACTION_PATH}/GitHubActionFetcher/GitHubActionFetcher.csproj"
    env:
      SVI_INPUT: ${{ inputs.input }}
      GITHUB_WORKSPACE: ${{ github.workspace }}
    if: ${{ contains(inputs.input, '$') }} # '$' is separator in input file path indicating that it is a composite action.

  - name: "Fetch files using Composed GitHub Action"
    uses: "./github-action-fetcher"
    if: ${{ contains(inputs.input, '$') }} # '$' is separator in input file path indicating that it is a composite action.

  - name: "Sharp Value Injector"
    # language=sh
    run: |
      dotnet run --project "${GITHUB_ACTION_PATH}/SharpValueInjector/SharpValueInjector.csproj"
    shell: "bash"
    env:
      SVI_OUTPUT: ${{ inputs.output }}
      SVI_VARIABLE: ${{ inputs.variables }}
      SVI_SECRET: ${{ inputs.secrets }}
      SVI_RECURSE_SUBDIRECTORIES: ${{ inputs.recurse-subdirectories }}
      SVI_IGNORE_CASE: ${{ inputs.ignore-case }}
      SVI_OPENING_TOKEN: ${{ inputs.opening-token }}
      SVI_CLOSING_TOKEN: ${{ inputs.closing-token }}
      SVI_LOG_LEVEL: ${{ inputs.log-level }}
      GITHUB_ACTIONS_PATH: "${{ runner.temp }}/../_actions"
